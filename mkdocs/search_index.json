{
    "docs": [
        {
            "location": "/",
            "text": "Working with molecular structures in pandas DataFrames\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLinks\n\n\n\n\nDocumentation: \nhttp://rasbt.github.io/biopandas/\n\n\nSource code repository: \nhttps://github.com/rasbt/biopandas\n\n\nPyPI: \nhttps://pypi.python.org/pypi/biopandas\n\n\n\n\n\n\n\nAbout\n\n\n\n\n\nExamples\n\n\n\n\n# Initialize a new PandasPDB object\n# and fetch the PDB file from rcsb.org\n>>> from biopandas.pdb import PandasPDB\n>>> ppdb = PandasPDB().fetch_pdb('3eiy')\n>>> ppdb.df['ATOM'].head()\n\n\n\n\n\n\n\n\n\n\n# Load structures from your drive and compute the\n# Root Mean Square Deviation\n>>> from biopandas.pdb import PandasPDB\n>>> pl1 = PandasPDB().read_pdb('./docking_pose_1.pdb')\n>>> pl2 = PandasPDB().read_pdb('./docking_pose_2.pdb')\n>>> r = PandasPDB.rmsd(pl1.df['HETATM'], pl2.df['HETATM'],\n                       s='hydrogen', invert=True)\n>>> print('RMSD: %.4f Angstrom' % r)\n\nRMSD: 2.6444 Angstrom",
            "title": "Home"
        },
        {
            "location": "/tutorials/PandasPDB/",
            "text": "PandasPDB",
            "title": "PandasPDB"
        },
        {
            "location": "/tutorials/PandasPDB/#pandaspdb",
            "text": "",
            "title": "PandasPDB"
        },
        {
            "location": "/api/biopandas.pdb/",
            "text": "biopandas\n API Documentation\n\n\n\n\nTable of Contents\n\n\n\n\nbiopandas.pdb\n\n\nBioPandas module for working with Protein Data Bank (PDB)\nfiles in pandas DataFrames.\n\n\nbiopandas.pdb.PandasPDB\n\n\n\n\nPandasPDB.fetch_pdb\n\n\nPandasPDB.get\n\n\nPandasPDB.read_pdb\n\n\nPandasPDB.rmsd\n\n\nPandasPDB.to_pdb\n\n\nPandasPDB.df\n\n\n\n\n\n\nbiopandas.pdb.PandasPDB\n\n\nObject for working with Protein Databank structure files.\n\n\nAttributes\n\n\n\n\n\n\ndf\n (dict)\n\n\nDictionary storing pandas DataFrames for PDB record sections.\nThe dictionary keys are {'ATOM', 'HETATM', 'ANISOU', 'OTHERS'}\nwhere 'OTHERS' contains all entries that are not parsed as\n'ATOM', 'HETATM', or 'ANISOU'\n\n\n\n\n\n\npdb_text\n (str)\n\n\nPDB file contents in raw text format\n\n\n\n\n\n\nheader\n (str)\n\n\nPDB file description\n\n\n\n\n\n\ncode\n (str)\n\n\nPDB code\n\n\n\n\n\n\n\n\nMethods\n\n\n\n\nPandasPDB.fetch_pdb\n\n\nPandasPDB.fetch_pdb(pdb_code)\n\n\nFetches PDB file contents from the Protein Databank at rcsb.org.\n\n\nParameters\n\n\n\n\n\n\npdb_code\n (str)\n\n\nA 4-letter PDB code, e.g., \"3eiy\"\n\n\n\n\n\n\nReturns\n\nself\n\n\n\n\nPandasPDB.get\n\n\nPandasPDB.get(s, df=None, invert=False)\n\n\nFilter PDB DataFrames by properties\n\n\nParameters\n\n\n\n\n\n\ns\n (str  in {'main chain', 'hydrogen', 'c-alpha'})\n\n\nString to specify which entries to return\n\n\n\n\n\n\ndf\n (pandas.DataFrame, default: None)\n\n\nOptional DataFrame to perform the filter operation on.\nIf df=None, filters on self.df['ATOM']\n\n\n\n\n\n\ninvert\n (bool, default: True)\n\n\nInverts the search query. For example if s='hydrogen' and\ninvert=True, all but hydrogen entries are returned\n\n\n\n\n\n\nReturns\n\n\n\n\n\n\ndf\n (pandas.DataFrame)\n\n\nReturns a DataFrame view on the filtered entries.\n\n\n\n\n\n\n\n\nPandasPDB.read_pdb\n\n\nPandasPDB.read_pdb(path)\n\n\nRead PDB files (unzipped or gzipped) from local drive\n\n\nAttributes\n\n\n\n\n\n\npath\n (str)\n\n\nPath to the PDB file in .pdb format or gzipped format (.pdb.gz)\n\n\n\n\n\n\nReturns\n\nself\n\n\n\n\nPandasPDB.rmsd\n\n\nPandasPDB.rmsd(df1, df2, s='main chain', invert=False)\n\n\nCompute the Root Mean Square Deviation between molecules.\n\n\nParameters\n\n\n\n\n\n\ndf1\n (pandas.DataFrame)\n\n\nDataFrame with HETATM, ATOM, and/or ANISOU entries\n\n\n\n\n\n\ndf2\n (pandas.DataFrame)\n\n\nSecond DataFrame for RMSD computation against df1. Must have the\nsame number of entries as df1\n\n\n\n\n\n\ns\n (str in {'main chain', 'hydrogen', 'c-alpha'}, default: 'main chain')\n\n\nString to specify which entries to consider.\n\n\n\n\n\n\ninvert\n (bool, default: False)\n\n\nInverts the string query if true. For example, the setting\n\ns='hydrogen', invert=True\n computes the RMSD based on all\nbut hydrogen atoms.\n\n\n\n\n\n\nReturns\n\n\n\n\n\n\nrmsd\n (float)\n\n\nRoot Mean Square Deviation between df1 and df2\n\n\n\n\n\n\n\n\nPandasPDB.to_pdb\n\n\nPandasPDB.to_pdb(path, records=None, gz=False, append_newline=True)\n\n\nWrite record DataFrames to a PDB file or gzipped PDB file.\n\n\nParameters\n\n\n\n\n\n\npath\n (str)\n\n\nA valid output path for the pdb file\n\n\n\n\n\n\nrecords\n (iterable, default: None)\n\n\nA list of PDB record sections in\n{'ATOM', 'HETATM', 'ANISOU', 'OTHERS'} that are to be written.\nWrites all lines to PDB if records=None\n\n\n\n\n\n\ngz\n (bool, default: False)\n\n\nWrites a gzipped PDB file if True\n\n\n\n\n\n\nappend_newline\n (bool, default: True)\n\n\nAppends a new line at the end of the PDB file if True\n\n\n\n\n\n\n\n\nProperties\n\n\n\n\nPandasPDB.df\n\n\nAcccess dictionary of pandas DataFrames for PDB record sections.",
            "title": "Biopandas.pdb"
        },
        {
            "location": "/api/biopandas.pdb/#biopandas-api-documentation",
            "text": "Table of Contents   biopandas.pdb  BioPandas module for working with Protein Data Bank (PDB)\nfiles in pandas DataFrames.  biopandas.pdb.PandasPDB   PandasPDB.fetch_pdb  PandasPDB.get  PandasPDB.read_pdb  PandasPDB.rmsd  PandasPDB.to_pdb  PandasPDB.df",
            "title": "biopandas API Documentation"
        },
        {
            "location": "/api/biopandas.pdb/#biopandaspdbpandaspdb",
            "text": "Object for working with Protein Databank structure files.  Attributes    df  (dict)  Dictionary storing pandas DataFrames for PDB record sections.\nThe dictionary keys are {'ATOM', 'HETATM', 'ANISOU', 'OTHERS'}\nwhere 'OTHERS' contains all entries that are not parsed as\n'ATOM', 'HETATM', or 'ANISOU'    pdb_text  (str)  PDB file contents in raw text format    header  (str)  PDB file description    code  (str)  PDB code     Methods   PandasPDB.fetch_pdb  PandasPDB.fetch_pdb(pdb_code)  Fetches PDB file contents from the Protein Databank at rcsb.org.  Parameters    pdb_code  (str)  A 4-letter PDB code, e.g., \"3eiy\"    Returns \nself   PandasPDB.get  PandasPDB.get(s, df=None, invert=False)  Filter PDB DataFrames by properties  Parameters    s  (str  in {'main chain', 'hydrogen', 'c-alpha'})  String to specify which entries to return    df  (pandas.DataFrame, default: None)  Optional DataFrame to perform the filter operation on.\nIf df=None, filters on self.df['ATOM']    invert  (bool, default: True)  Inverts the search query. For example if s='hydrogen' and\ninvert=True, all but hydrogen entries are returned    Returns    df  (pandas.DataFrame)  Returns a DataFrame view on the filtered entries.     PandasPDB.read_pdb  PandasPDB.read_pdb(path)  Read PDB files (unzipped or gzipped) from local drive  Attributes    path  (str)  Path to the PDB file in .pdb format or gzipped format (.pdb.gz)    Returns \nself   PandasPDB.rmsd  PandasPDB.rmsd(df1, df2, s='main chain', invert=False)  Compute the Root Mean Square Deviation between molecules.  Parameters    df1  (pandas.DataFrame)  DataFrame with HETATM, ATOM, and/or ANISOU entries    df2  (pandas.DataFrame)  Second DataFrame for RMSD computation against df1. Must have the\nsame number of entries as df1    s  (str in {'main chain', 'hydrogen', 'c-alpha'}, default: 'main chain')  String to specify which entries to consider.    invert  (bool, default: False)  Inverts the string query if true. For example, the setting s='hydrogen', invert=True  computes the RMSD based on all\nbut hydrogen atoms.    Returns    rmsd  (float)  Root Mean Square Deviation between df1 and df2     PandasPDB.to_pdb  PandasPDB.to_pdb(path, records=None, gz=False, append_newline=True)  Write record DataFrames to a PDB file or gzipped PDB file.  Parameters    path  (str)  A valid output path for the pdb file    records  (iterable, default: None)  A list of PDB record sections in\n{'ATOM', 'HETATM', 'ANISOU', 'OTHERS'} that are to be written.\nWrites all lines to PDB if records=None    gz  (bool, default: False)  Writes a gzipped PDB file if True    append_newline  (bool, default: True)  Appends a new line at the end of the PDB file if True     Properties   PandasPDB.df  Acccess dictionary of pandas DataFrames for PDB record sections.",
            "title": "biopandas.pdb.PandasPDB"
        },
        {
            "location": "/changelog/",
            "text": "Changelog \n\n\n0.1.0 (2015-11-22)\n\n\n\n\nFirst Release",
            "title": "Changelog"
        },
        {
            "location": "/changelog/#changelog",
            "text": "0.1.0 (2015-11-22)   First Release",
            "title": "Changelog"
        },
        {
            "location": "/installation/",
            "text": "Installing biopandas \n\n\nYou can install \nbiopandas\n directly via pip by executing the following code from your command line:  \n\n\npip install biopandas  \n\n\n\n\n\n\nYou want to try out the latest features before they go live on PyPI? Install the \nbiopandas\n dev-version latest development version from the GitHub repository by executing\n\n\npip install git+git://github.com/rasbt/biopandas.git#egg=biopandas\n\n\n\n\n\n\nAlternatively, you download the package manually from \nPYPI\n or \nGitHub\n, unzip it, navigate into the package, and execute the command:\n\n\npython setup.py install",
            "title": "Installation"
        },
        {
            "location": "/installation/#installing-biopandas",
            "text": "You can install  biopandas  directly via pip by executing the following code from your command line:    pip install biopandas     You want to try out the latest features before they go live on PyPI? Install the  biopandas  dev-version latest development version from the GitHub repository by executing  pip install git+git://github.com/rasbt/biopandas.git#egg=biopandas   Alternatively, you download the package manually from  PYPI  or  GitHub , unzip it, navigate into the package, and execute the command:  python setup.py install",
            "title": "Installing biopandas"
        },
        {
            "location": "/contributing/",
            "text": "How to Contribute \n\n\nI would be very happy about any kind of contributions that help to improve and extend the functionality of biopandas.\n\n\n\n\n\n\nQuick contributor checklist\n\n\n\n\n[ ]  Open a new \"issue\" on GitHub to discuss the new feature / bug fix  \n\n\n[ ]  Create and checkout a new topic branch   \n\n\n[ ]  Implement new feature or apply bugfix  \n\n\n[ ]  Add appropriate unit test functions  \n\n\n[ ]  Run \nnosetests -sv\n and make sure that all unit tests pass  \n\n\n[ ]  Add a note about the change to the \n./docs/sources/CHANGELOG.md\n file  \n\n\n[ ]  Modify documentation in \n./docs/examples/\n and \n./docs/sources/\n  \n\n\n[ ]  Push the topic branch to the server and create a pull request\n\n\n\n\n\n\nGetting Started\n\n\n\n\nIf you don't have a \nGitHub\n account yet, please create one to contribute to this project.\n\n\nPlease submit a ticket for your issue to discuss the fix or new feature before too much time and effort is spent for the implementation.\n\n\n\n\n\n\n\n\nFork the \nbiopandas\n repository from the GitHub web interface.\n\n\n\n\n\n\n\n\nClone the \nbiopandas\n repository to your local machine\n\n\ngit clone https://github.com/<your_username>/biopandas.git\n\n\n\n\n\n\n\n\n\n\n\n\nMaking Changes\n\n\n\n\nPlease avoid working directly on the master branch but create a new feature branch:\n\n\ngit branch <new_feature>\n\n\ngit checkout <new_feature>\n\n\n\n\n\n\nWhen you make changes, please provide meaningful \ncommit\n messages:\n\n\ngit add <edited_files>\n\n\ngit commit -m '<some note>'\n\n\n\n\n\n\nMake an entry in the \nbiopandas/docs/sources/CHANGELOG.md\n file.\n\n\nAdd tests to the \nbiopandas/biopandas/tests\n directory.\n\n\nRun all tests (e.g., via \nnosetests\n  or \npytest\n).\n\n\nIf it is a new feature, it would be nice (but not necessary) if you could update the documentation.\n\n\nPush your changes to a topic branch:\n\n\ngit push -u origin <new_feature>\n\n\n\n\n\n\nSubmit a \npull request\n from your forked repository via the GitHub web interface.\n\n\n\n\n\n\n\n\n\n\n\n\nNotes for Developers\n\n\nBuilding the documentation\n\n\nThe documentation is built via \nMkDocs\n; to ensure that the documentation is rendered correctly, you can view the documentation locally by executing \nmkdocs serve\n from the \nbiopandas/docs\n directory.\n\n\nFor example,\n\n\n~/github/biopandas/docs$ mkdocs serve\n\n\n\n\n\n\n1. Tutorials\n\n\nPlease note that documents containing code examples are generated from IPython Notebook files located in \nmlxtend/docs/sources/ipynb\n and converted to markdown via\n\n\n~/github/mlxtend/docs/examples$ nbconvert --to markdown <file.ipynb>\n\n\n\n\nThe markdown file should be placed into the documentation directory at \nbiopandas/docs/sources\n to build the documentation via  MkDocs.\nIf you are adding a new document, please also include it in the pages section in the \nbiopandas/docs/mkdocs.yml\n file.\n\n\n\n\n2. API\n\n\nTo build the API documentation, navigate to \nbiopandas/docs\n and execute the \nmake_api.py\n file from this directory via\n\n\n~/github/biopandas/docs$ python make_apy.py\n\n\n\n\nThis should place the API documentation into the correct directories in \nbiopandas/docs/sources/api\n.\n\n\n\n\n3. Building static HTML files\n\n\nBuild the static HTML files of the biopandas documentation via\n\n\n~/github/biopandas/docs$ mkdocs build --clean\n\n\n\n\nTo deploy the documentation, execute\n\n\n~/github/biopandas/docs$ mkdocs gh-deploy --clean\n\n\n\n\nand\n\n\n~/github/biopandas/docs$ python setup.py upload_docs --upload-dir=site",
            "title": "Contributing"
        },
        {
            "location": "/contributing/#how-to-contribute",
            "text": "I would be very happy about any kind of contributions that help to improve and extend the functionality of biopandas.    Quick contributor checklist   [ ]  Open a new \"issue\" on GitHub to discuss the new feature / bug fix    [ ]  Create and checkout a new topic branch     [ ]  Implement new feature or apply bugfix    [ ]  Add appropriate unit test functions    [ ]  Run  nosetests -sv  and make sure that all unit tests pass    [ ]  Add a note about the change to the  ./docs/sources/CHANGELOG.md  file    [ ]  Modify documentation in  ./docs/examples/  and  ./docs/sources/     [ ]  Push the topic branch to the server and create a pull request",
            "title": "How to Contribute"
        },
        {
            "location": "/contributing/#getting-started",
            "text": "If you don't have a  GitHub  account yet, please create one to contribute to this project.  Please submit a ticket for your issue to discuss the fix or new feature before too much time and effort is spent for the implementation.     Fork the  biopandas  repository from the GitHub web interface.     Clone the  biopandas  repository to your local machine  git clone https://github.com/<your_username>/biopandas.git",
            "title": "Getting Started"
        },
        {
            "location": "/contributing/#making-changes",
            "text": "Please avoid working directly on the master branch but create a new feature branch:  git branch <new_feature>  git checkout <new_feature>    When you make changes, please provide meaningful  commit  messages:  git add <edited_files>  git commit -m '<some note>'    Make an entry in the  biopandas/docs/sources/CHANGELOG.md  file.  Add tests to the  biopandas/biopandas/tests  directory.  Run all tests (e.g., via  nosetests   or  pytest ).  If it is a new feature, it would be nice (but not necessary) if you could update the documentation.  Push your changes to a topic branch:  git push -u origin <new_feature>    Submit a  pull request  from your forked repository via the GitHub web interface.",
            "title": "Making Changes"
        },
        {
            "location": "/contributing/#notes-for-developers",
            "text": "Building the documentation  The documentation is built via  MkDocs ; to ensure that the documentation is rendered correctly, you can view the documentation locally by executing  mkdocs serve  from the  biopandas/docs  directory.  For example,  ~/github/biopandas/docs$ mkdocs serve   1. Tutorials  Please note that documents containing code examples are generated from IPython Notebook files located in  mlxtend/docs/sources/ipynb  and converted to markdown via  ~/github/mlxtend/docs/examples$ nbconvert --to markdown <file.ipynb>  The markdown file should be placed into the documentation directory at  biopandas/docs/sources  to build the documentation via  MkDocs.\nIf you are adding a new document, please also include it in the pages section in the  biopandas/docs/mkdocs.yml  file.   2. API  To build the API documentation, navigate to  biopandas/docs  and execute the  make_api.py  file from this directory via  ~/github/biopandas/docs$ python make_apy.py  This should place the API documentation into the correct directories in  biopandas/docs/sources/api .   3. Building static HTML files  Build the static HTML files of the biopandas documentation via  ~/github/biopandas/docs$ mkdocs build --clean  To deploy the documentation, execute  ~/github/biopandas/docs$ mkdocs gh-deploy --clean  and  ~/github/biopandas/docs$ python setup.py upload_docs --upload-dir=site",
            "title": "Notes for Developers"
        }
    ]
}